/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.health.widgets;

import com.health.installer.fund.utils.Util;
import com.health.objects.GetAvailibleRooms;
import com.health.objects.GetRoomCurrentAppointment;
import com.health.objects.HandlePatient;
import com.health.project.medteam.Globals;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.event.TreeSelectionEvent;
import javax.swing.event.TreeSelectionListener;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;

/**
 *
 * @author Inspiron
 */
public class RoomDoctor extends javax.swing.JPanel {

    /**
     * Creates new form RoomDoctor
     */
    GetRoomCurrentAppointment.CurrentPatient patient;
    private boolean isConnected = false;
    private GetAvailibleRooms.Room current;
    private GetRoomCurrentAppointment.CurrentAppointment appointment;

    public RoomDoctor() {
        initComponents();

        
        CurrentLabel.setText("Connect to Show Patients");
        CurrentPanel.setVisible(false);

        final DefaultMutableTreeNode node = Util.getRoomsNodes();
        final DefaultTreeModel model = new DefaultTreeModel(node);
        ConnectList.setModel(model);
        ConnectBtn.setEnabled(false);
        ConnectList.addTreeSelectionListener(new TreeSelectionListener() {
            @Override
            public void valueChanged(TreeSelectionEvent e) {
                if (ConnectList.getSelectionPath() == null) {
                    return;
                }
                List<GetAvailibleRooms.Room> rooms = new ArrayList<>();
                Util.getAllObjects((DefaultMutableTreeNode) ConnectList.getSelectionPath().getLastPathComponent(), rooms);
                if (rooms.size() == 1) {
                    ConnectBtn.setEnabled(true);
                    current = rooms.get(0);
                } else {
                    ConnectBtn.setEnabled(false);
                    current = null;
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        ConnectBtn = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        ConnectList = new javax.swing.JTree();
        CurrentLabel = new javax.swing.JLabel();
        CurrentPanel = new javax.swing.JPanel();
        HandleBtn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        NameCurrent = new javax.swing.JLabel();
        AgeCurrent = new javax.swing.JLabel();
        Container = new javax.swing.JPanel();

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setPreferredSize(new java.awt.Dimension(640, 280));

        jLabel1.setText("Institutions");

        ConnectBtn.setText("Connect");
        ConnectBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConnectBtnActionPerformed(evt);
            }
        });

        jScrollPane3.setViewportView(ConnectList);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane3)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 336, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(226, 226, 226))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(ConnectBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 197, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ConnectBtn)
                .addContainerGap())
        );

        CurrentLabel.setText("Current Patient");

        CurrentPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        HandleBtn.setText("Handle Pateint");
        HandleBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HandleBtnActionPerformed(evt);
            }
        });

        jLabel3.setText("Name");

        jLabel4.setText("Age");

        NameCurrent.setText("Alaa Khaled Mohmmad Alsabateenn");

        AgeCurrent.setText("20 years");

        javax.swing.GroupLayout CurrentPanelLayout = new javax.swing.GroupLayout(CurrentPanel);
        CurrentPanel.setLayout(CurrentPanelLayout);
        CurrentPanelLayout.setHorizontalGroup(
            CurrentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CurrentPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(CurrentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(CurrentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(AgeCurrent, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NameCurrent, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(HandleBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );
        CurrentPanelLayout.setVerticalGroup(
            CurrentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CurrentPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(CurrentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(NameCurrent))
                .addGroup(CurrentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CurrentPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(HandleBtn))
                    .addGroup(CurrentPanelLayout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(CurrentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(AgeCurrent))))
                .addGap(26, 26, 26))
        );

        Container.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        Container.setLayout(new javax.swing.BoxLayout(Container, javax.swing.BoxLayout.Y_AXIS));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(CurrentPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Container, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(CurrentLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(CurrentLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(CurrentPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Container, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void ConnectBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConnectBtnActionPerformed
        // TODO add your handling code here:

        if (!isConnected) {

            if (current != null) {

                GetAvailibleRooms.Room room = current;
                
               
                GetRoomCurrentAppointment.CurrentAppointment app = GetRoomCurrentAppointment.GetRoomCurrentAppointment(room.room_id);
                if (app == null) {
                    CurrentLabel.setText("No Appointments Now  " + "(" + current.room_path + ")");
                    return;
                }

                if (app.current.patient_id == 0) {
                    CurrentLabel.setText("No Appointments Now" + "(" + current.room_path + ")");
                    return;
                }

                patient = app.current;
                appointment = app;
                ConnectBtn.setText("Disconnect");
                isConnected = true;
                ConnectList.setEnabled(false);
                CurrentLabel.setText("Current Patient");
                CurrentPanel.setVisible(true);
                NameCurrent.setText(app.current.name);
                AgeCurrent.setText(app.current.age);
                Container.removeAll();

                for (int i = 0; i < app.patients.size(); i++) {
                    RoomPatient p = new RoomPatient();
                    p.setData(app.patients.get(i), i);
                    Container.add(p);
                }

            }

        } else {
            isConnected = false;
            ConnectList.setEnabled(true);
            ConnectBtn.setText("Connect");
            Container.removeAll();;
            CurrentLabel.setText("Connect to Show Patients");
            CurrentPanel.setVisible(false);
            patient = null;
        }


    }//GEN-LAST:event_ConnectBtnActionPerformed

    private void HandleBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HandleBtnActionPerformed
        // TODO add your handling code here

        if (patient != null) {
            boolean is = Globals.setPatient(patient.patient_id, patient.procedure_id);
            if (is) {
                boolean handled = HandlePatient.HandlePatient(patient.patient_id, patient.procedure_id, current.room_id, appointment.appointment_id, patient.request);
                if (handled) {
                    
                    
                    JFrame frame = new JFrame("Patient");
                    frame.getContentPane().add(new HealthRecordDocker(), BorderLayout.CENTER);
                    Dimension d = new Dimension(1200, 800);
                    frame.setSize(d);
                    frame.setLocationRelativeTo(null);
                    frame.setResizable(false);
                    frame.setVisible(true);
                    frame.pack(); 
                    
                    
                    GetRoomCurrentAppointment.CurrentAppointment app = GetRoomCurrentAppointment.GetRoomCurrentAppointment(current.room_id);
                    if (app.current.patient_id == 0) {
                        isConnected = false;
                        ConnectList.setEnabled(true);
                        ConnectBtn.setText("Connect");
                        Container.removeAll();;
                        CurrentLabel.setText("Connect to Show Patients");
                        CurrentPanel.setVisible(false);
                        patient = null;
                        return;
                    }
                    
                    patient = app.current;
                    appointment = app;
                    ConnectBtn.setText("Disconnect");
                    isConnected = true;
                    ConnectList.setEnabled(false);
                    CurrentLabel.setText("Current Patient");
                    CurrentPanel.setVisible(true);
                    NameCurrent.setText(app.current.name);
                    AgeCurrent.setText(app.current.age);
                    Container.removeAll();
                    for (int i = 0; i < app.patients.size(); i++) {
                        RoomPatient p = new RoomPatient();
                        p.setData(app.patients.get(i), i);
                        Container.add(p);
                    }
                   
                } else {
                    isConnected = false;
                    ConnectList.setEnabled(true);
                    ConnectBtn.setText("Connect");
                    Container.removeAll();;
                    CurrentLabel.setText("Connect to Show Patients");
                    CurrentPanel.setVisible(false);
                    patient = null;
                }
            }
        }

    }//GEN-LAST:event_HandleBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AgeCurrent;
    private javax.swing.JButton ConnectBtn;
    private javax.swing.JTree ConnectList;
    private javax.swing.JPanel Container;
    private javax.swing.JLabel CurrentLabel;
    private javax.swing.JPanel CurrentPanel;
    private javax.swing.JButton HandleBtn;
    private javax.swing.JLabel NameCurrent;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane3;
    // End of variables declaration//GEN-END:variables
}
